syntax = "proto3";

package proto;

option go_package = "systemSmartContracts";
option (gogoproto.stable_marshaler_all) = true;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

enum VoteValueType {
    Yes     = 0;
    No      = 1;
    Veto    = 2;
    Abstain = 3;
}

message GeneralProposal {
    uint64 Nonce          = 1 [(gogoproto.jsontag) = "Nonce"];
    bytes  CommitHash     = 2 [(gogoproto.jsontag) = "CommitHash"];
    uint64 StartVoteEpoch = 3 [(gogoproto.jsontag) = "StartVoteEpoch"];
    uint64 EndVoteEpoch   = 4 [(gogoproto.jsontag) = "EndVoteEpoch"];
    bytes  Yes            = 5 [(gogoproto.jsontag) = "Yes", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
    bytes  No             = 6 [(gogoproto.jsontag) = "No", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
    bytes  Veto           = 7 [(gogoproto.jsontag) = "Veto", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
    bytes  Abstain        = 8 [(gogoproto.jsontag) = "Abstain", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
    bytes  QuorumStake    = 9 [(gogoproto.jsontag) = "QuorumStake", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
    bool   Passed         = 10 [(gogoproto.jsontag) = "Passed"];
    bool   Closed         = 11 [(gogoproto.jsontag) = "Closed"];
    bytes  IssuerAddress  = 12 [(gogoproto.jsontag) = "IssuerAddress"];
    bytes  ProposalCost   = 13 [(gogoproto.jsontag) = "ProposalCost", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
}

message GovernanceConfig {
    int64 NumNodes         = 1 [(gogoproto.jsontag) = "NumNodes"];
    int32 MinQuorum        = 2 [(gogoproto.jsontag) = "MinQuorum"];
    int32 MinPassThreshold = 3 [(gogoproto.jsontag) = "MinPassThreshold"];
    int32 MinVetoThreshold = 4 [(gogoproto.jsontag) = "MinVetoThreshold"];
    bytes ProposalFee      = 5 [(gogoproto.jsontag) = "ProposalFee", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
}

message GovernanceConfigV2 {
    float  MinQuorum         = 1 [(gogoproto.jsontag) = "MinQuorum"];
    float  MinPassThreshold  = 2 [(gogoproto.jsontag) = "MinPassThreshold"];
    float  MinVetoThreshold  = 3 [(gogoproto.jsontag) = "MinVetoThreshold"];
    bytes  ProposalFee       = 4 [(gogoproto.jsontag) = "ProposalFee", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
    bytes  LostProposalFee   = 5 [(gogoproto.jsontag) = "LostProposalFee", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
    uint64 LastProposalNonce = 6 [(gogoproto.jsontag) = "LastProposalNonce"];
}

message OngoingVotedList {
    repeated uint64 Direct    = 1 [(gogoproto.jsontag) = "Direct"];
    repeated uint64 Delegated = 2 [(gogoproto.jsontag) = "Delegated"];
}

message OngoingVotedListV2 {
    repeated uint64 Direct = 1 [(gogoproto.jsontag) = "Direct"];
    repeated DelegatedWithAddress DelegatedWithAddress = 2 [(gogoproto.jsontag) = "DelegatedWithAddress"];
}

message DelegatedWithAddress {
    uint64 Nonce = 1 [(gogoproto.jsontag) = "Nonce"];
    bytes  DelegatedAddress  = 2 [(gogoproto.jsontag) = "DelegatedAddress"];
}

message DelegatedSCVoteInfo {
    bytes TotalPower = 1 [(gogoproto.jsontag) = "TotalPower", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
    bytes UsedPower  = 2 [(gogoproto.jsontag) = "UsedPower", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
    bytes TotalStake = 3 [(gogoproto.jsontag) = "TotalStake", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
    bytes UsedStake  = 4 [(gogoproto.jsontag) = "UsedStake", (gogoproto.casttypewith) = "math/big.Int;github.com/multiversx/mx-chain-core-go/data.BigIntCaster"];
}
